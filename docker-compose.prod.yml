version: "3.7"
services:

  backend:
    build: ./app
    restart: unless-stopped
    command: ["/app/tools/run.sh"]
    volumes:
      - static_volume:/app/staticfiles
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable
    env_file:
      - .env
    networks:
      - network-backend
      - network-frontend

  frontend:
    build: ./frontend
    volumes:
      - www:/app/dist

  nginx:
    build: ./nginx
    restart: unless-stopped
    volumes:
      - /home/ubuntu/logs:/var/logs
      - /home/ubuntu/doccano/certbot/conf:/etc/letsencrypt
      - /home/ubuntu/doccano/certbot/www:/var/www/certbot
      - www:/var/www/html:ro
      - static_volume:/static
      - /home/ubuntu/doccano/nginx/nginx.conf:/etc/nginx/nginx.conf
    env_file:
      - .env
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - ${NGINX_PORT1}:${NGINX_PORT1}
      - ${NGINX_PORT2}:${NGINX_PORT2}
    depends_on:
      - backend
    networks:
      - network-frontend

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /home/ubuntu/doccano/certbot/conf:/etc/letsencrypt
      - /home/ubuntu/doccano/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  static_volume:
  www:

networks:
  network-backend:
  network-frontend:
